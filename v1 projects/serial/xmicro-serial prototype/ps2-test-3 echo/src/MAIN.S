.PC02

.INCLUDE "INSTRUCTIONS.MAC"
.INCLUDE "XM7SEG.MAC"

	XMICRO_MEMORY = $1100
	RTC = XMICRO_MEMORY+$10

	PS2_READ = $1310
	PS2_WRITE = $1312
	PS2_SR = $1311

.SEGMENT "ZEROPAGE"

PS2_WRITEBUFFER:	.RES 1

.SEGMENT "STARTUP"
_INIT:
	SEI
	CLC
	LDX #$FF
	TXS

	JSR XM7SEG_INIT
	XM7SEG_ON

	LDA #$4C		;LOAD VECTOR WITH RTC ISR
	STA $0204
	LDA #.LOBYTE(RTC_ISR)
	STA $0205
	LDA #.HIBYTE(RTC_ISR)
	STA $0206

;	LDA #$4C		;LOAD VECTOR WITH PS2 ISR
;	STA $020C
;	LDA #.LOBYTE(PS2_ISR)
;	STA $020D
;	LDA #.HIBYTE(PS2_ISR)
;	STA $020E

	LDA #$01
	STA PS2_WRITEBUFFER

	LDA #%11000000		;SET ALARM RATE TO EVERY SECOND
	STA RTC+$01
	STA RTC+$03
	STA RTC+$05
	STA RTC+$07

	LDA #%00000100		;ONLY ENABLE PIE
	STA RTC+$0C

	LDA RTC+$0E
	ORA #%00000110		;SET 24 HOUR MODE
;	AND #%11111011		;SET 12 HOUR MODE
	STA RTC+$0E

	LDA #%00000001
	STA RTC+$0B		;Set interrupt rate


	LDX #$00
	TXA
	TAY
	CLI

	JMP _MAIN

.SEGMENT "CODE"

_MAIN:
	WAI
	JMP _MAIN

RTC_ISR:
	LDA RTC+$0D		;FLAG REGISTER
	AND #%00001000		;MASK ALARM FLAG
	CMP #%00001000
	BEQ L0			;UPDATE DISPLAY IF THERE IS AN ALARM
	RTI

L0:	LDA PS2_SR
	STA XM7SEG_BUFFER+2
	LDA XM7SEG_BUFFER+0
	STA XM7SEG_BUFFER+1
	LDA PS2_READ
	STA XM7SEG_BUFFER+0
	JSR XM7SEG_WRITE

	LDA XM7SEG_BUFFER+2
	AND #%00100000
	BEQ PS2_SEND_COMMAND
	RTI

;	TYA
;	EOR #$FF
;	TAY
;	BEQ PS2_SEND_DATA

PS2_SEND_COMMAND:
;	LDA PS2_WRITEBUFFER
;	CLC
;	ROR
;	BCC L1
;	ROR
;L1:	STA PS2_WRITEBUFFER
	LDA #$EE
	STA PS2_WRITE

;PS2_SEND_DATA:
;	TXA
;	EOR #$FF
;	TAX
;	STA PS2_WRITE

RTI
