.PC02

.INCLUDE "INSTRUCTIONS.MAC"
.INCLUDE "XM7SEG.MAC"
.INCLUDE "MOVE.MAC"

.IMPORT __LOWCODE_LOAD__, __LOWCODE_RUN__, __LOWCODE_SIZE__

	XMICRO_6502 = $7000

	XMICRO_MEMORY = $7100
	RTC = XMICRO_MEMORY+$10

	ZPVAR = $99
	BANKVAR = $9999

.SEGMENT "STARTUP"
_INIT:
	SEI
	CLC
	LDX #$FF
	TXS

	LDA #$4C		;LOAD VECTOR WITH RTC ISR
	STA $0204
	LDA #.LOBYTE(RTC_ISR)
	STA $0205
	LDA #.HIBYTE(RTC_ISR)
	STA $0206

	LDA #%00000000		;SET ALARM RATE
	STA RTC+$01
	STA RTC+$03
	STA RTC+$05
	STA RTC+$07

	LDA RTC+$0B		;SET PERIODIC INTERRUPT RATE
	AND #%11110000
	ORA #%00001110		;488uS
	STA RTC+$0B

;	LDA #%00001000		;ONLY ENABLE ALARM INTERRUPT
	LDA #%00000100		;ONLY ENABLE PERIODIC INTERRUPT
	STA RTC+$0C

	MOVE #__LOWCODE_LOAD__, #__LOWCODE_RUN__, #__LOWCODE_SIZE__

	JMP LOW_SETUP

.SEGMENT "LOWCODE"

LOW_SETUP:

	JSR XM7SEG_INIT
	XM7SEG_ON

	LDA #%10011110		;BANKED ZP, BANK1E ($F0000)
	STA XMICRO_6502
	STA LASTBANK
	LDA #$20
	STA ZPVAR
	LDA #$30
	STA BANKVAR

	LDA #%10000010		;BANKED ZP, BANK02 ($10000)
	STA XMICRO_6502
	LDA #$00
	STA ZPVAR
	LDA #$10
	STA BANKVAR

	LDX #$00
	TXA
	TAY
	CLI

_MAIN:
	NOP
	JMP _MAIN

RTC_ISR:
	LDA XMICRO_6502
	TAX
	LDA #$01
	STA XMICRO_6502
	TXA
	PHA

	LDA RTC+$0D		;FLAG REGISTER
	AND #%00000100		;MASK ALARM FLAG
	CMP #%00000100
	BEQ L0			;UPDATE DISPLAY IF THERE IS AN ALARM

	LDA #$01
	STA XMICRO_6502
	PLA
	STA XMICRO_6502
	RTI

L0:
	LDA LASTBANK
	EOR #%00011100
	STA LASTBANK
	STA XMICRO_6502
	STA $7302

	LDX ZPVAR
	INX
	STX ZPVAR
	STX $7300

	LDX BANKVAR
	INX
	STX BANKVAR
	STX $7301

	LDA #$01
	STA XMICRO_6502
	PLA
	STA XMICRO_6502
	RTI

;VARIABLES
LASTBANK:	.RES 1
