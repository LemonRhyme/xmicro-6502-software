;-----------------------------------------------------------------------------
; STARTUP.S
; SYSTEM INITIALIZATION
;-----------------------------------------------------------------------------

.INCLUDE "INSTRUCTIONS.MAC"
.INCLUDE "MOVE.MAC"
.INCLUDE "CFDRIVER.MAC"
.INCLUDE "FAT.MAC"
.INCLUDE "XM7SEG.MAC"


.MACRO NOPS N
	.REPEAT N
		NOP
	.ENDREPEAT
.ENDMACRO

.MACRO WREG VAL, REG
	LDA VAL
	STA VDP+1
	LDA #$80+REG
	STA VDP+1
.ENDMACRO

.MACRO INCREG VAL, REG
	.IFNBLANK REG
		LDA #REG
		STA VDP+1
		LDA #$80+17
		STA VDP+1
	.ENDIF
	LDA VAL
	STA VDP+3
.ENDMACRO

.MACRO RSTAT REG
	WREG #REG, 15
	NOP
	LDA VDP+1
.ENDMACRO

.MACRO WAIT N
.LOCAL @1
	PHX
	PHY
	LDX #$00
	LDY #$00
@1:	.REPEAT N
		NOP
	.ENDREPEAT
	DEX
	BNE @1
	DEY
	BNE @1
	PLY
	PLX
.ENDMACRO


.IMPORT __ZEROPAGE_RUN__, __ZEROPAGE_SIZE__					;SEGMENT INFORMATION
;.IMPORT __BANK1_START__, __BANK1_SIZE__			;SEGMENT INFORMATION

.EXPORT _INIT									;CODE LABEL
.EXPORT VDP = $7000, XMICRO_MEMORY = $7100, XMICRO_6502 = $7300, ERROR_HALT							;ASSEMBLER CONSTANTS

.SEGMENT "DATA"
	FRAME_COUNT:	.RES 2 = $00FF

.SEGMENT "STARTUP"
_INIT:
	SEI									;DISABLE INTERRUPTS
	CLD									;CLEAR DECIMAL MODE
	LDX #$FF
	TXS									;INITIALIZE STACK POINTER


;----INTERRUPTS INIT---
	LDA #%11111110		;SET MASK (ONLY VDP)
	;LDA #$FF		;DISABLE INTERRUPTS
	STA XMICRO_6502+1

	;VDP_VECTOR = $0200	;IRQ0
	VDP_VECTOR = $0220	;NMI

	LDA #$4C		;SET VECTOR (VDP_ISR)
	STA VDP_VECTOR+0
	LDA #.LOBYTE(VDP_ISR)
	STA VDP_VECTOR+1
	LDA #.HIBYTE(VDP_ISR)
	STA VDP_VECTOR+2


	JSR CF_INIT								;INITIALIZE CF CARD AND DRIVER
	JSR FAT_INIT								;INITIALIZE FAT16 DRIVER
	LDA FAT_STATUS								;CHECK STATUS OF FAT16 DRIVER
	BNE ERROR_HALT

	LDX #$00								;CLEAR REGISTERS
	TXA
	TAY

;	FS_STREAM S_IMAGE, $7400			;FIND AND LOAD IMAGETST.S07

	JSR VDP_INIT
	LDA #$FF
	STA FRAME_COUNT
	WREG #%01100000, 1	;SCREEN ON, VERTICAL INTERRUPT
	CLI

_MAIN:
	NOP
	JMP _MAIN

ERROR_HALT:
	JSR XM7SEG_ERRORCODE
	JSR CF_SENSE
	SEI
	WAI

.SEGMENT "CODE"

VDP_INIT:
	WREG #%00001010, 0		;GRAPHICS 6 MODE
	WREG #%00000000, 1		;SCREEN BLANK, NO VERTICAL INTERRUPT
;	WREG #%01000000, 1		;SCREEN ON, NO VERTICAL INTERRUPT


	WREG #%00011111, 2		;PATTERN LAYOUT $00000
	WREG #%11110000, 7		;BLACK BORDER
;	WREG #%00101010, 8		;VRAM 64KX4, SPRITES DISABLED
	WREG #%00101001, 8		;VRAM 64KX4, SPRITES ENABLED
;	WREG #%00000000, 9		;192 LINES, NON-INTERLACED, NTSC
	WREG #%10000000, 9		;212 LINES, NON-INTERLACED, NTSC

	WREG #%00000100, 25		;ENABLE WAIT OUTPUT

;----PALETTE REGISTER INIT----
PALETTE_INIT:
	WREG #$00, 16
		LDY #$00
	@1:	LDA PALETTE,Y
		STA VDP+2
		INY
		CPY #$20
		BNE @1


;----PATTERN LAYOUT INIT----
PATTERN_INIT:
	WREG #%00000000, 14		;ZERO OUT VRAM
	MVA #%00000000, VDP+1
	MVA #%01000000, VDP+1		;SET UP ADDRESS ($0000), WRITE-MODE

	FS_STREAM S_PAGE0, VDP			;FIND AND LOAD

RTS


LOAD_LOGO:
	;SET UP HMMC COMMAND
	INCREG #$11, 36		;DESTINATION POSITION 17,28
	INCREG #$00 ;37
	INCREG #$1C ;38
	INCREG #$00 ;39
	INCREG #$DE ;40		;478 PIXELS WIDE
	INCREG #$01 ;41
	INCREG #$28 ;42		;40 PIZELS TALL
	INCREG #$00 ;43
	INCREG LOGO_DATA ;44		;FIRST DATA BYTE
	INCREG #%00000000 ;45	;DIRECTION DOWN AND RIGHT
	INCREG #%10111000 ;46	;LMMC, TIMP (HONOR TRANSPARENCY)
	WREG #$80+44, 17	;SET INDIRECT REGISTER WRITES TO R#44, NON-INCREMENTING

	;SET UP MOVE
	MWA #LOGO_DATA+1, MOVE_FROM
	MWA #$27FF, MOVE_SIZE

	LDY #00
	LDX MOVE_SIZE+1
	BEQ @MD2
@MD1:	RSTAT 2			;LEFT PIXEL
	AND #%10000001
	BEQ @MD4
	AND #%10000000
	BEQ @MD1
	LDA (MOVE_FROM),Y	;MOVE A PAGE AT A TIME
	LSR
	LSR
	LSR
	LSR
	STA VDP+3

@MD1_1:	RSTAT 2			;RIGHT PIXEL
	AND #%10000001
	BEQ @MD4
	AND #%10000000
	BEQ @MD1_1
	LDA (MOVE_FROM),Y	;MOVE A PAGE AT A TIME
	STA VDP+3

	INY
	BNE @MD1
	INC MOVE_FROM+1
	DEX
	BNE @MD1
@MD2:	LDX MOVE_SIZE
	BEQ @MD4
@MD3:	RSTAT 2			;LEFT PIXEL
	AND #%10000001
	BEQ @MD4
	AND #%10000000
	BEQ @MD1
	LDA (MOVE_FROM),Y	;MOVE A PAGE AT A TIME
	LSR
	LSR
	LSR
	LSR
	STA VDP+3

@MD3_1:	RSTAT 2			;RIGHT PIXEL
	AND #%10000001
	BEQ @MD4
	AND #%10000000
	BEQ @MD3_1
	LDA (MOVE_FROM),Y	;MOVE A PAGE AT A TIME
	STA VDP+3

	INY
	DEX
	BNE @MD3
@MD4:

@1:	RSTAT 2			;WAIT UNTIL COMMAND IS COMPLETE
	AND #%00000001
	BEQ @1

RTS


VDP_ISR:
	RSTAT 00			;DETERMINE WHERE THE INTERRUPT CAME FROM
	AND #%10000000
	BEQ @1
	JMP V_INT
@1:	RSTAT 01
	AND #%00000001
	BEQ @2
	JMP H_INT
@2:	RTI

V_INT:
	DEC FRAME_COUNT
	BNE @RETURN
	JSR LOAD_LOGO
@RETURN:
	RTI

H_INT:
	RTI


.SEGMENT "RODATA"

	PALETTE:
	.DBYT $0000	;0	TRANSPARENT
	.DBYT $5000	;1	RED
	.DBYT $6002	;2	ORANGE
	.DBYT $7006	;3	YELLOW
	.DBYT $0004	;4	GREEN
	.DBYT $0502	;5	BLUE
	.DBYT $3400	;6	PURPLE
	.DBYT $4200	;7	MAROON
	.DBYT $0001	;8	GRID1
	.DBYT $0002	;9	GRID2
	.DBYT $0003	;A	GRID3
	.DBYT $1006	;B	GRID4
	.DBYT $2000	;C	SUNSET 1
	.DBYT $1100	;D	SUNSET 2
	.DBYT $0100	;E	SUNSET 3
	.DBYT $2202	;F	STARS

S_PAGE0:	.ASCIIZ "PAGE0   VRM"	;FILENAME STRING PAGE0.VRM
S_LOGO:		.ASCIIZ "LOGO    VRM"	;FILENAME STRING LOGO.VRM
LOGO_DATA:	.INCBIN "LOGO.G6"		;GRAPHICS MODE 6 LOGO DATA - 478 X 40 PIXELS
