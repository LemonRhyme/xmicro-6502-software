.PC02

.INCLUDE "INSTRUCTIONS.MAC"
.INCLUDE "XM7SEG.MAC"


.MACRO NOPS N
	.REPEAT N
		NOP
	.ENDREPEAT
.ENDMACRO

.MACRO WREG VAL, REG
	LDA VAL
	STA VDP+1
	LDA #$80+REG
	STA VDP+1
.ENDMACRO

.MACRO WAIT N
.LOCAL @1
	PHX
	PHY
	LDX #$00
	LDY #$00
@1:	.REPEAT N
		NOP
	.ENDREPEAT
	DEX
	BNE @1
	DEY
	BNE @1
	PLY
	PLX
.ENDMACRO


.SEGMENT "ZEROPAGE"
	SECONDS_BUFFER:	.RES 2
	MOVE_FROM:	.RES 2
	MOVE_TO:	.RES 2
	MOVE_SIZE:	.RES 2

.SEGMENT "DATA"
	VDP_BUFFER:	.RES $1000
	VDP_EMPTY:	.RES $1000

.SEGMENT "STARTUP"

	XMICRO_MEMORY = $7100
	RTC = XMICRO_MEMORY+$10

	VDP = $7400


_INIT:
	SEI
	CLC
	LDX #$FF
	TXS

;----RTC INIT---
	LDA #%00000000		;DISABLE INTERRUPTS
	STA RTC+$0C

	JSR XM7SEG_INIT
	XM7SEG_ON
	XM7SEG_WORD #$1111

;----VDP INIT----
;	WREG #%00000000, 0	;$00, $80	;TEXT1 MODE
;	WREG #%01010000, 1	;$50, $81

	WREG #%00000100, 0	;$04, $80	;TEXT2 MODE
	WREG #%01010000, 1	;$50, $81

;	WREG #%00000100, 0	;$04, $80	;MC MODE
;	WREG #%01011000, 1	;$58, $81


	WREG #%00000011, 2	;$00, $82
	WREG #%00101111, 3
	WREG #%00000010, 4	;$01, $84
	WREG #%11110000, 7	;$F0, $87
	WREG #%00001000, 8	;$09, $88
	WREG #%00000000, 9	;$00, $89
	WREG #%00000000, 10

	WREG #%00000100, 25	;ENABLE WAIT OUTPUT

	LDA #$00
	TAX
	TAY

;----PATTERN LAYOUT INIT----
	WREG #%00000000, 14
 	MVA #%00000000, VDP+1
	MVA #%01000000, VDP+1		;SET UP ADDRESS ($0000), WRITE-MODE

	LDX #$00
	LDY #$9

	;LDA #$00
	LDA #$41

@1:	STA VDP+0
	NOPS 10
	DEX
	BNE @1
	DEY
	BNE @1

;----PATTERN GENERATOR INIT----
PATTERN_GEN_INIT:

	MWA #FONT_TABLE, MOVE_FROM
	MWA #$0800, MOVE_SIZE

	WREG #%00000000, 14
	MVA #%00000000, VDP+1
	MVA #%01010000, VDP+1		;SET UP ADDRESS ($1000), WRITE-MODE

	;MVA #%00100000, VDP+0
	;NOPS 10
	LDA #$00

	LDY #$00
	LDX MOVE_SIZE+1
	BEQ MD2
MD1:	;LDA (MOVE_FROM),Y	;MOVE A PAGE AT A TIME
	STA VDP+0
	NOPS 10
	INY
	BNE MD1
	INC MOVE_FROM+1
	DEX
	BNE MD1
MD2:	LDX MOVE_SIZE
	BEQ MD4
MD3:	;LDA (MOVE_FROM),Y	;MOVE THE REMAINING BYTES
	STA VDP+0
	NOPS 10
	INY
	DEX
	BNE MD3
MD4:

JMP _MAIN



;----PATTERN LAYOUT INIT----
LAYOUT_INIT:
	WREG #%00000000, 14
 	MVA #%00000000, VDP+1
	MVA #%01000000, VDP+1		;SET UP ADDRESS ($0000), WRITE-MODE

	CLC
@L1:	LDY #$1A	;26 LINES
@L2:	LDX #$08	;8 10-DIGIT BLOCKS PER LINE
@L3:	LDA #$30
	STA VDP+0
	ADC #$01
	STA VDP+0
	ADC #$01
	STA VDP+0
	ADC #$01
	STA VDP+0
	ADC #$01
	STA VDP+0
	ADC #$01
	STA VDP+0
	ADC #$01
	STA VDP+0
	ADC #$01
	STA VDP+0
	ADC #$01
	STA VDP+0
	ADC #$01
	STA VDP+0
	DEX
	BNE @L3
	DEY
	BNE @L2

	JMP _MAIN

.SEGMENT "CODE"

_MAIN:

V_READ:

	MWA #VDP_BUFFER, MOVE_TO
	MWA #$0800, MOVE_SIZE
	WREG #%00000000, 14
	MVA #%00000000, VDP+1
	MVA #%00000000, VDP+1		;SET UP ADDRESS ($0000), READ-MODE

	LDY #$00
	LDX MOVE_SIZE+1
	BEQ @MD2
@MD1:	LDA VDP+0	;MOVE A PAGE AT A TIME
	STA (MOVE_TO),Y
	INY
	BNE @MD1
	INC MOVE_TO+1
	DEX
	BNE @MD1
@MD2:	LDX MOVE_SIZE
	BEQ @MD4
@MD3:	LDA VDP+0	;MOVE THE REMAINING BYTES
	STA (MOVE_TO),Y
	INY
	DEX
	BNE @MD3
@MD4:
	JMP V_WRITE

INC_VBUFF:

	MWA #VDP_BUFFER, MOVE_FROM
	MWA #$0800, MOVE_SIZE
	WREG #%00000000, 14
	MVA #%00000000, VDP+1
	MVA #%00000000, VDP+1		;SET UP ADDRESS ($0000), READ-MODE

	LDY #$00
	LDX MOVE_SIZE+1
	BEQ @MD2
@MD1:	LDA (MOVE_FROM),Y
	CLC
	ADC #$01
	STA (MOVE_FROM),Y
	INY
	BNE @MD1
	INC MOVE_FROM+1
	DEX
	BNE @MD1
@MD2:	LDX MOVE_SIZE
	BEQ @MD4
@MD3:	LDA (MOVE_FROM),Y
	CLC
	ADC #$01
	STA (MOVE_FROM),Y
	INY
	DEX
	BNE @MD3
@MD4:

V_WRITE:
	MWA #VDP_BUFFER, MOVE_FROM
	MWA #$0800, MOVE_SIZE
	WREG #%00000000, 14
	MVA #%00000000, VDP+1
	MVA #%01000000, VDP+1		;SET UP ADDRESS ($0000), WRITE-MODE

	LDY #$00
	LDX MOVE_SIZE+1
	BEQ @MD2
@MD1:	LDA (MOVE_FROM),Y	;MOVE A PAGE AT A TIME
	STA VDP+0
	INY
	BNE @MD1
	INC MOVE_FROM+1
	DEX
	BNE @MD1
@MD2:	LDX MOVE_SIZE
	BEQ @MD4
@MD3:	LDA (MOVE_FROM),Y	;MOVE THE REMAINING BYTES
	STA VDP+0
	INY
	DEX
	BNE @MD3
@MD4:

	;WAIT 1

	JMP _MAIN

.SEGMENT "RODATA"
FONT_TABLE:
.INCBIN "MSXFONT.ALF", $7
