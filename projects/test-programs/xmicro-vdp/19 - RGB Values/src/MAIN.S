.PC02

.INCLUDE "INSTRUCTIONS.MAC"
.INCLUDE "XM7SEG.MAC"


.MACRO NOPS N
	.REPEAT N
		NOP
	.ENDREPEAT
.ENDMACRO

.MACRO WREG VAL, REG
	LDA VAL
	STA VDP+1
	LDA #$80+REG
	STA VDP+1
.ENDMACRO

.MACRO RSTAT REG
	WREG #REG, 15
	LDA VDP+1
.ENDMACRO

.MACRO WAIT N
.LOCAL @1
	PHX
	PHY
	LDX #$00
	LDY #$00
@1:	.REPEAT N
		NOP
	.ENDREPEAT
	DEX
	BNE @1
	DEY
	BNE @1
	PLY
	PLX
.ENDMACRO


.SEGMENT "ZEROPAGE"
	SECONDS_BUFFER:	.RES 2
	MOVE_FROM:	.RES 2
	MOVE_TO:	.RES 2
	MOVE_SIZE:	.RES 2

	COLOR_POINTER:	.RES 2
	NEXTLINE:	.RES 1
	CURRENT_COLOR:	.RES 1

.SEGMENT "STARTUP"

	XMICRO_MEMORY = $7100
	RTC = XMICRO_MEMORY+$10

	VDP = $7400


_INIT:
	SEI
	CLC
	LDX #$FF
	TXS

	MWA #COLOR_TABLE, COLOR_POINTER

;----RTC INIT---
	LDA #%00000000		;DISABLE INTERRUPTS
	STA RTC+$0C

	JSR XM7SEG_INIT
	XM7SEG_ON
	XM7SEG_WORD #$1111

;----INTERRUPTS INIT---
	LDA #%11101111		;SET MASK (ONLY VDP)
	;LDA #$FF		;DISABLE INTERRUPTS
	STA $7301

	LDA #$4C		;SET VECTOR (VDP_ISR)
	STA $0210
	LDA #.LOBYTE(VDP_ISR)
	STA $0211
	LDA #.HIBYTE(VDP_ISR)
	STA $0212


;----VDP INIT----
;	WREG %00000000, 0	;$00, $80	;TEXT1 MODE
;	WREG #%01010000, 1	;$50, $81

	WREG #%00010100, 0	;$04, $80	;TEXT2 MODE, HORIZONTAL INTERRUPT
	WREG #%01110000, 1	;$50, $81	;VERTICAL INTERRUPT

;	WREG #%00000100, 0	;$04, $80	;MC MODE
;	WREG #%01011000, 1	;$58, $81


	WREG #%00000011, 2	;$00, $82	;PATTERN LAYOUT $00000
	WREG #%00101111, 3
	WREG #%00000010, 4	;$01, $84	;PATTERN GENERATOR $01000
	WREG #%11110000, 7	;$F0, $87
	WREG #%00001000, 8	;$09, $88
	WREG #%00000000, 9	;$00, $89
	WREG #%00000000, 10

	WREG #%00000100, 25	;ENABLE WAIT OUTPUT

	LDA #$00
	TAX
	TAY

;----PALETTE REGISTER INIT----
	WREG #$01, 16			;RED COLOR 01
	LDA #$70			;MSB RED LSB BLUE
	STA VDP+2
	LDA #$00			;LSB GREEN
	STA VDP+2

	WREG #$02, 16			;GREEN COLOR 02
	LDA #$00			;MSB RED LSB BLUE
	STA VDP+2
	LDA #$07			;LSB GREEN
	STA VDP+2

	WREG #$03, 16			;BLUE COLOR 03
	LDA #$07			;MSB RED LSB BLUE
	STA VDP+2
	LDA #$00			;LSB GREEN
	STA VDP+2

	WREG #$04, 16			;WHITE COLOR 04
	LDA #$77			;MSB RED LSB BLUE
	STA VDP+2
	LDA #$07			;LSB GREEN
	STA VDP+2

	WREG #$05, 16			;BLACK COLOR 04
	LDA #$00			;MSB RED LSB BLUE
	STA VDP+2
	LDA #$00			;LSB GREEN
	STA VDP+2


;----PATTERN LAYOUT INIT----
	WREG #%00000000, 14
 	MVA #%00000000, VDP+1
	MVA #%01000000, VDP+1		;SET UP ADDRESS ($0000), WRITE-MODE

	LDX #$00
	LDY #$9

	LDA #$DB

@1:	STA VDP+0
	DEX
	BNE @1
	DEY
	BNE @1

;COLOR NAMES
	WREG #%00000000, 14
	MVA #%00000000, VDP+1
	MVA #%01000000, VDP+1		;SET UP ADDRESS ($0000), WRITE-MODE
	LDA #$52			;R
	STA VDP+0
	LDA #$45			;E
	STA VDP+0
	LDA #$44			;D
	STA VDP+0
	LDA #$20
	STA VDP+0
	LDA #$20
	STA VDP+0

	WREG #%00000000, 14
	MVA #%11100000, VDP+1
	MVA #%01000001, VDP+1		;SET UP ADDRESS ($01E0), WRITE-MODE
	LDA #$47			;G
	STA VDP+0
	LDA #$52			;R
	STA VDP+0
	LDA #$45			;E
	STA VDP+0
	LDA #$45			;E
	STA VDP+0
	LDA #$4E			;N
	STA VDP+0

	WREG #%00000000, 14
	MVA #%11000000, VDP+1
	MVA #%01000011, VDP+1		;SET UP ADDRESS ($03C0), WRITE-MODE
	LDA #$42			;B
	STA VDP+0
	LDA #$4C			;L
	STA VDP+0
	LDA #$55			;U
	STA VDP+0
	LDA #$45			;E
	STA VDP+0
	LDA #$20
	STA VDP+0

	WREG #%00000000, 14
	MVA #%10100000, VDP+1
	MVA #%01000101, VDP+1		;SET UP ADDRESS ($05A0), WRITE-MODE
	LDA #$57			;W
	STA VDP+0
	LDA #$48			;H
	STA VDP+0
	LDA #$49			;I
	STA VDP+0
	LDA #$54			;T
	STA VDP+0
	LDA #$45			;E
	STA VDP+0


;----PATTERN GENERATOR INIT----
PATTERN_GEN_INIT:

	MWA #FONT_TABLE, MOVE_FROM
	MWA #$0800, MOVE_SIZE

	WREG #%00000000, 14
	MVA #%00000000, VDP+1
	MVA #%01010000, VDP+1		;SET UP ADDRESS ($0800), WRITE-MODE

	;MVA #%00100000, VDP+0
	;NOPS 10

	LDY #00
	LDX MOVE_SIZE+1
	BEQ @MD2
@MD1:	LDA (MOVE_FROM),Y	;MOVE A PAGE AT A TIME
	STA VDP+0
	INY
	BNE @MD1
	INC MOVE_FROM+1
	DEX
	BNE @MD1
@MD2:	LDX MOVE_SIZE
	BEQ @MD4
@MD3:	LDA (MOVE_FROM),Y	;MOVE THE REMAINING BYTES
	STA VDP+0
	INY
	DEX
	BNE @MD3
@MD4:

	LDA #$00
	STA NEXTLINE
	WREG NEXTLINE, 19

	WREG #$F0, 7
	CLI
	JMP _MAIN

.SEGMENT "CODE"

_MAIN:
NOPS 10
JMP _MAIN



VDP_ISR:
	RSTAT 00			;DETERMINE WHERE THE INTERRUPT CAME FROM
	AND #%10000000
	BEQ @1
	JMP V_INT
@1:	RSTAT 01
	AND #%00000001
	BEQ @2
	JMP H_INT
@2:	RTI

V_INT:

	WREG #$04, 7
	NOPS 20
	WREG #$F0, 7
	RTI

H_INT:
	LDY CURRENT_COLOR
	WREG #$0F, 16		;WRITE TO PALETTE $F
	LDA (COLOR_POINTER),Y
	STA VDP+2
	INY
	LDA (COLOR_POINTER),Y
	STA VDP+2
	INY
	STY CURRENT_COLOR

	LDA NEXTLINE
	CLC
	ADC #$06
	CMP #$C0		;DON'T SET THE NEXT LINE IF WE'VE REACHED THE END.
	BCS V_RESET
	STA NEXTLINE
	WREG NEXTLINE, 19
@1:	RTI

V_RESET:				;VERTICAL RETRACE INTERRUPT (START OF FRAME)
	LDA #$00
	STA CURRENT_COLOR
	STA NEXTLINE
	WREG NEXTLINE, 19
	RTI

;R19 - INTERRUPT LINE REGISTER. WRITE LINE NUMBER FOR HORIZONTAL INTERRUPT
;S0 - BIT 7 = VERTICAL INTERRUPT FLAG. READ FOR STATUS, RESETS FLAG
;S1 - BIT 0 = HORIZONTAL INTERRUPT FLAG. READ FOR STATUS, RESETS FLAG



.SEGMENT "RODATA"
COLOR_TABLE:
	.WORD $0070	;RED
	.WORD $0060
	.WORD $0050
	.WORD $0040
	.WORD $0030
	.WORD $0020
	.WORD $0010
	.WORD $0000

	.WORD $0700	;GREEN
	.WORD $0600
	.WORD $0500
	.WORD $0400
	.WORD $0300
	.WORD $0200
	.WORD $0100
	.WORD $0000

	.WORD $0007	;BLUE
	.WORD $0006
	.WORD $0005
	.WORD $0004
	.WORD $0003
	.WORD $0002
	.WORD $0001
	.WORD $0000

	.WORD $0777	;WHITE
	.WORD $0666
	.WORD $0555
	.WORD $0444
	.WORD $0333
	.WORD $0222
	.WORD $0111
	.WORD $0000


TEXT:	.ASCIIZ "HELLO WORLD! This is a test of color in text mode with an ASCII character set.  The quick brown fox jumps over the lazy dog."
FONT_TABLE:	.INCBIN "MSXFONT.ALF", $07
