.PC02

.IMPORT __XMICRO_VDP_START__, __XMICRO_VDP_VECTOR__, __XMICRO_MEMORY_START__	;LINKER-GENERATED SYSTEM INFO
.CONDES VDP_INIT_OLD, CONSTRUCTOR

.INCLUDE "instructions.mac"

.MACRO NOPS N
	.REPEAT N
		NOP
	.ENDREPEAT
.ENDMACRO

.MACRO WREG VAL, REG
	LDA VAL
	STA VDP+1
	LDA #$80+REG
	STA VDP+1
.ENDMACRO

.MACRO WAIT N
.LOCAL @1
	PHX
	PHY
	LDX #$00
	LDY #$00
@1:	.REPEAT N
		NOP
	.ENDREPEAT
	DEX
	BNE @1
	DEY
	BNE @1
	PLY
	PLX
.ENDMACRO

	VDP := __XMICRO_VDP_START__
	XMICRO_MEMORY := __XMICRO_MEMORY_START__
	RTC := XMICRO_MEMORY+$10

.SEGMENT "ZEROPAGE"
	MOVE_FROM:	.RES 2
	MOVE_TO:	.RES 2
	MOVE_SIZE:	.RES 2

.SEGMENT "ONCE"
VDP_INIT_OLD:
	PHA
	PHX
	PHY
;----VDP INIT----
	WREG #%00000000, 0	;$00, $80	;TEXT1 MODE
	WREG #%01010000, 1	;$50, $81
	WREG #%00000000, 2	;$00, $82	;PATTERN LAYOUT $00000 (TEXT 1)

;	WREG #%00000100, 0	;$04, $80	;TEXT2 MODE
;	WREG #%01010000, 1	;$50, $81
;	WREG #%00000011, 2	;$00, $82	;PATTERN LAYOUT $00000 (TEXT 2)

;	WREG #%00000100, 0	;$04, $80	;MC MODE
;	WREG #%01011000, 1	;$58, $81

	WREG #%00101111, 3
	WREG #%00000001, 4	;$01, $84	;PATTERN GENERATOR $00800
	WREG #%11110000, 7	;$F0, $87
	WREG #%00001000, 8	;$09, $88
	WREG #%00000000, 9	;$00, $89
	WREG #%00000000, 10

	WREG #%00000100, 25	;ENABLE WAIT OUTPUT

;----PALETTE REGISTER INIT----
	WREG #$FF, 16			;WHITE COLOR 04
	LDA #$77			;MSB RED LSB BLUE
	STA VDP+2
	LDA #$07			;LSB GREEN
	STA VDP+2

;----PATTERN LAYOUT INIT----
	WREG #%00000000, 14
 	MVA #%00000000, VDP+1
	MVA #%01000000, VDP+1		;SET UP ADDRESS ($0000), WRITE-MODE

	LDX #$00
	LDY #$9

	LDA #$20

@1:	STA VDP+0
	DEX
	BNE @1
	DEY
	BNE @1

;----PATTERN GENERATOR INIT----
PATTERN_GEN_INIT:

	MWA #FONT_TABLE, MOVE_FROM
	MWA #$0800, MOVE_SIZE

	WREG #%00000000, 14
	MVA #%00000000, VDP+1
	MVA #%01001000, VDP+1		;SET UP ADDRESS ($0800), WRITE-MODE

	;MVA #%00100000, VDP+0
	;NOPS 10

	LDY #00
	LDX MOVE_SIZE+1
	BEQ @MD2
@MD1:	LDA (MOVE_FROM),Y	;MOVE A PAGE AT A TIME
	STA VDP+0
	INY
	BNE @MD1
	INC MOVE_FROM+1
	DEX
	BNE @MD1
@MD2:	LDX MOVE_SIZE
	BEQ @MD4
@MD3:	LDA (MOVE_FROM),Y	;MOVE THE REMAINING BYTES
	STA VDP+0
	INY
	DEX
	BNE @MD3
@MD4:
	PLY
	PLX
	PLA
	RTS

.SEGMENT "RODATA"
FONT_TABLE:	.INCBIN "msxfont.alf", $07
