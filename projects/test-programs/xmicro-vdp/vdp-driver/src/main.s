.PC02

.EXPORT _main
.CONSTRUCTOR MAIN_INIT

.INCLUDE "instructions.mac"
.INCLUDE "xmserial_ps2.inc"
.INCLUDE "vdp.inc"

.SEGMENT "ZEROPAGE"
	KEY_FLAGS:	.RES 1			;BIT 7 IS THE SHIFT FLAG, BIT 6 IS CAPS
	KEY_STATES:	.RES 1			;LSHIFT, RSHIFT, LCTRL, RCTRL, LALT, RALT, LWIN, RWIN

	MOVE_FROM:	.RES 2
	MOVE_TO:	.RES 2
	MOVE_SIZE:	.RES 2

.SEGMENT "ONCE"
MAIN_INIT:
	STZ KEY_FLAGS
	RTS

.SEGMENT "CODE"
_main:

	;CLEAR THE PATTERN LAYOUT
	VRAM_SETWRITE #$00000
	LDX #$00
	LDY #$9
	LDA #$20
@1:	STA VDP+0
	DEX
	BNE @1
	DEY
	BNE @1

	;PATTERN GENERATOR INIT
	MWA #FONT_TABLE, MOVE_FROM
	MWA #$0800, MOVE_SIZE

	VRAM_SETWRITE #$00800

	LDY #00
	LDX MOVE_SIZE+1
	BEQ @MD2
@MD1:	LDA (MOVE_FROM),Y	;MOVE A PAGE AT A TIME
	STA VDP+0
	INY
	BNE @MD1
	INC MOVE_FROM+1
	DEX
	BNE @MD1
@MD2:	LDX MOVE_SIZE
	BEQ @MD4
@MD3:	LDA (MOVE_FROM),Y	;MOVE THE REMAINING BYTES
	STA VDP+0
	INY
	DEX
	BNE @MD3
@MD4:
	JSR VDP_SCREEN_ON


	;SET UP ADDRESS ($00000), WRITE-MODE
	VRAM_SETWRITE #$00000
	CLI

LOOP:
	JSR PS2_GETKEY
	BEQ LOOP

@1:	CMP #44
	BNE @2
	LDA #%10000000
	TSB KEY_STATES
	JMP MAKE_SHIFT
@2:	CMP #57
	BNE @3
	LDA #%01000000
	TSB KEY_STATES
	JMP MAKE_SHIFT
@3:	CMP #44+128
	BNE @4
	LDA #%10000000
	TRB KEY_STATES
	JMP BREAK_SHIFT
@4:	CMP #57+128
	BNE @5
	LDA #%01000000
	TRB KEY_STATES
	JMP BREAK_SHIFT
@5:	CMP #30
	BNE @6
	JMP CAPSLOCK

@6:	CMP #112		;F1
	BNE @7
	JMP F1
@7:	CMP #113		;F2
	BNE @8
	JMP F2


@8:	CMP #$00
	BMI LOOP

	LDA KEY_FLAGS
	BMI SHIFT

NORMAL:
	LDX ASCII_NORMAL_TABLE,Y
	BIT KEY_FLAGS
	BVC PRINT
@CAPS:	TXA
	CMP #$61
	BMI PRINT
	CMP #$7B
	BPL PRINT
	SEC
	SBC #$20
	TAX
	BRA PRINT

SHIFT:
	LDX ASCII_SHIFT_TABLE,Y
	BIT KEY_FLAGS
	BVC PRINT
@CAPS:	TXA
	CMP #$41
	BMI PRINT
	CMP #$5B
	BPL PRINT
	CLC
	ADC #$20
	TAX
	BRA PRINT

PRINT:
	CPX #$00
	BEQ LOOP
	STX VDP
	JMP LOOP

MAKE_SHIFT:
	LDA #%10000000
	TSB KEY_FLAGS
	JMP LOOP

BREAK_SHIFT:
	LDA KEY_STATES
	BIT #%11000000
	BNE @1
	LDA #%10000000
	TRB KEY_FLAGS
@1:	JMP LOOP

CAPSLOCK:
	BIT KEY_FLAGS
	BVS @BREAK
@MAKE:	LDA #%01000000
	TSB KEY_FLAGS
	LDA #$ED
	JSR PS2_COMMAND
	LDA #%00000100
	JSR PS2_COMMAND
	JMP LOOP
@BREAK:	LDA #%01000000
	TRB KEY_FLAGS
	LDA #$ED
	JSR PS2_COMMAND
	LDA #%00000000
	JSR PS2_COMMAND
	JMP LOOP


F1:	LDA #$FE		;REQUEST RESEND
	JSR PS2_COMMAND
	JMP LOOP

F2:	LDA #$FE		;REQUEST RESEND
	JSR PS2_COMMAND
	JMP LOOP


.SEGMENT "RODATA"
FONT_TABLE:	.INCBIN "msxfont.alf", $07
