;-----------------------------------------------------------------------------
; XMSERIAL.S
; XMICRO-SERIAL DRIVER
; 2020-04-10
;-----------------------------------------------------------------------------

.INCLUDE "INSTRUCTIONS.MAC"

.EXPORT UART1_TXBUFFER, UART1_RXBUFFER
.EXPORT XMSERIAL_INIT

;CONSTANTS
	XMSERIAL_SLOT	= 2			;BACKPLANE SLOT OF CARD
	CARD_BASE	= $7000+(XMSERIAL_SLOT*$100)
	CARD_IRQ_VECTOR	= $0200+(XMSERIAL_SLOT*$4)

	UART1_BASE	= CARD_BASE+0
	UART1_RHR	= UART1_BASE+0		;RECEIVE HOLDING REGISTER
	UART1_THR	= UART1_BASE+0		;TRANSMIT HOLDING REGISTER
	UART1_IER	= UART1_BASE+1		;INTERRUPT ENABLE REGISTER
	UART1_FCR	= UART1_BASE+2		;FIFO CONTROL REGISTER
	UART1_ISR	= UART1_BASE+2		;INTERRUPT STATUS REGISTER
	UART1_LCR	= UART1_BASE+3		;LINE CONTROL REGISTER
	UART1_MCR	= UART1_BASE+4		;MODEM CONTROL REGISTER
	UART1_LSR	= UART1_BASE+5		;LINE STATUS REGISTER
	UART1_MSR	= UART1_BASE+6		;MODEM STATUS REGISTER
	UART1_SPR	= UART1_BASE+7		;SCRATCHPAD REGISTER
	UART1_DLL	= UART1_BASE+0		;DIVISOR LATCH LSB
	UART1_DLM	= UART1_BASE+1		;DIVISOR LATCH MSB

	PS2_DATA	= CARD_BASE+$10		;PS/2 DATA REGISTER

	XMSERIAL_CSR	= CARD_BASE+$11		;CARD STATUS REGISTER

.SEGMENT "ZEROPAGE"
	PS2_POINTER	.RES 2

.SEGMENT "BSS"
	UART1_TXBUFFER:	.RES 2
	UART1_RXBUFFER:	.RES 2

	PS2_CMDBUFFER:	.RES 8
	PS2_READBUFFER:	.RES 8
	PS2_CMDSTATE:	.RES 1
	PS2_READSTATE:  .RES 1
	PS2_C


.SEGMENT "CODE"
;-----------------------------------------------------------------------------
; XMSERIAL_INIT
; INITIALIZE THE CARD - LOAD INTERRUPT VECTOR
;-----------------------------------------------------------------------------
.PROC XMSERIAL_INIT
	MVA #$4C, CARD_IRQ_VECTOR		;LOAD INTERRUPT VECTOR WITH "JMP XMSERIAL_ISR"
	MWA #XMSERIAL_ISR, CARD_IRQ_VECTOR+1

	LDA #$FF				;RESET AND SELF-TEST KEYBOARD
	STA PS2_DATA
	LDA PS2_DATA				;CLEAR PS/2 DATA REGISTER WHILE IT IS ISSUING RESET COMMAND




	RTS
.ENDPROC

;-----------------------------------------------------------------------------
; XMSERIAL_ISR
; INTERRUPT SERVICE ROUTINE FOR THE CARD
;-----------------------------------------------------------------------------
.PROC XMSERIAL_ISR
	PUSH_AXY

	LDA XMSERIAL_CSR

	PULL_AXY
	RTI
.ENDPROC
