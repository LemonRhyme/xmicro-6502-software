.PC02

.EXPORT _main
.IMPORT PS2_GETKEY, PS2_COMMAND, ASCII_NORMAL_TABLE, ASCII_SHIFT_TABLE
.IMPORT __XMICRO_VDP_START__

.CONDES MAIN_INIT, CONSTRUCTOR

.INCLUDE "INSTRUCTIONS.MAC"
.MACRO WREG VAL, REG
	LDA VAL
	STA VDP+1
	LDA #$80+REG
	STA VDP+1
.ENDMACRO

	VDP := __XMICRO_VDP_START__

.SEGMENT "ZEROPAGE"
	KEY_FLAGS:	.RES 1			;BIT 7 IS THE SHIFT FLAG, BIT 6 IS CAPS
	KEY_STATES:	.RES 1			;LSHIFT, RSHIFT, LCTRL, RCTRL, LALT, RALT, LWIN, RWIN

.SEGMENT "ONCE"
MAIN_INIT:
	STZ KEY_FLAGS
	RTS

.SEGMENT "CODE"
_main:
	WREG #%00000000, 14
	MVA #%00000000, VDP+1
	MVA #%01000000, VDP+1		;SET UP ADDRESS ($0000), WRITE-MODE

LOOP:
	JSR PS2_GETKEY
	CPY #$00
	BEQ LOOP

@1:	CPY #44
	BNE @2
	LDA #%10000000
	TSB KEY_STATES
	JMP MAKE_SHIFT
@2:	CPY #57
	BNE @3
	LDA #%01000000
	TSB KEY_STATES
	JMP MAKE_SHIFT
@3:	CPY #44+128
	BNE @4
	LDA #%10000000
	TRB KEY_STATES
	JMP BREAK_SHIFT
@4:	CPY #57+128
	BNE @5
	LDA #%01000000
	TRB KEY_STATES
	JMP BREAK_SHIFT
@5:	CPY #30
	BNE @6
	JMP CAPSLOCK

@6:	CPY #112		;F1
	BNE @7
	JMP F1
@7:	CPY #113		;F2
	BNE @8
	JMP F2


@8:	CPY #$00
	BMI LOOP

	LDA KEY_FLAGS
	BMI SHIFT

NORMAL:
	LDX ASCII_NORMAL_TABLE,Y
	BIT KEY_FLAGS
	BVC PRINT
@CAPS:	TXA
	CMP #$61
	BMI PRINT
	CMP #$7B
	BPL PRINT
	SEC
	SBC #$20
	TAX
	BRA PRINT

SHIFT:
	LDX ASCII_SHIFT_TABLE,Y
	BIT KEY_FLAGS
	BVC PRINT
@CAPS:	TXA
	CMP #$41
	BMI PRINT
	CMP #$5B
	BPL PRINT
	CLC
	ADC #$20
	TAX
	BRA PRINT

PRINT:
	CPX #$00
	BEQ LOOP
	STX VDP
	JMP LOOP

MAKE_SHIFT:
	LDA #%10000000
	TSB KEY_FLAGS
	JMP LOOP

BREAK_SHIFT:
	LDA KEY_STATES
	BIT #%11000000
	BNE @1
	LDA #%10000000
	TRB KEY_FLAGS
@1:	JMP LOOP

CAPSLOCK:
	BIT KEY_FLAGS
	BVS @BREAK
@MAKE:	LDA #%01000000
	TSB KEY_FLAGS
	LDA #$ED
	JSR PS2_COMMAND
	LDA #%00000100
	JSR PS2_COMMAND
	JMP LOOP
@BREAK:	LDA #%01000000
	TRB KEY_FLAGS
	LDA #$ED
	JSR PS2_COMMAND
	LDA #%00000000
	JSR PS2_COMMAND
	JMP LOOP


F1:	LDA #$FE		;REQUEST RESEND
	JSR PS2_COMMAND
	JMP LOOP

F2:	LDA #$FE		;REQUEST RESEND
	JSR PS2_COMMAND
	JMP LOOP
